@page
@model MortgageCalculator.Pages.TheCodeModel
@{
}

<head>
    <link href="css/prism.css" rel="stylesheet">
    <link rel="icon" type="image/png" href="img/favicon-32x32.png" />
</head>

<main class="flex-shrink-0">
    <div class="container py-5 px-5 mt-2">
        <h2 class="border-1 border-bottom border-dark">The Code for Mortgage Calulator</h2>
        <div class="row row-cols-1 row-cols-lg-2">
            <div class="col-lg-8">
                <pre class="line-numbers">
                <code class="language-javascript">
                        public class MortgageHelper
                        {

                        #region Get Payments
                        public Loan GetPayments(Loan loan)
                        {


                        // calc monthly payments
                        loan.Payment = CalculateMonthlyPayment(loan.LoanAmount, loan.LoanInterest, loan.LoanTerm);



                        decimal avoidPMI = loan.LoanAmount * 0.2m;
                        loan.LoanAmount -= loan.PayDown;

                        if (loan.PayDown < avoidPMI)
                        {
                        decimal PMIAmount = loan.PMIRate * loan.LoanAmount;
                        loan.PMIRequired = true;
                        loan.LoanAmount += PMIAmount;
                        }
                        else
                        {
                        loan.PMIRequired = false;
                        }



                        var balance = loan.LoanAmount;
                        var totalInterest = 0m;
                        var monthlyInterest = 0m;
                        var monthlyPrincipal = 0m;
                        var monthlyRate = CalculateMonthlyRate(loan.LoanInterest);

                        for (int month = 1; month <= loan.LoanTerm; month++)
                        {


                        monthlyInterest = CalculateMonthlyInterest(balance, monthlyRate);
                        totalInterest += monthlyInterest;
                        monthlyPrincipal = loan.Payment - monthlyInterest;
                        balance -= monthlyPrincipal;

                        LoanPayment loanPayment = new();

                        loanPayment.Month = month;
                        loanPayment.Payment = loan.Payment;
                        loanPayment.MonthlyPrincipal = monthlyPrincipal;
                        loanPayment.MonthlyInterest = monthlyInterest;
                        loanPayment.TotalInterest = totalInterest;
                        loanPayment.Balance = balance;

                        loan.Payments.Add(loanPayment);

                        }
                        loan.TotalInterest = totalInterest;
                        loan.TotalCost = loan.LoanAmount + totalInterest;
                        return loan;
                        }
                        #endregion



                        #region Monthly Payment Calculation
                        private decimal CalculateMonthlyPayment(decimal loanAmount, decimal rate, int loanTerm)
                        {
                        var monthlyRate = CalculateMonthlyRate(rate);
                        var rateD = Convert.ToDouble(monthlyRate);
                        var amountD = Convert.ToDouble(loanAmount);

                        var paymentD = (amountD * rateD) / (1 - Math.Pow(1 + rateD, -loanTerm));


                        return Convert.ToDecimal(paymentD);
                        }
                        #endregion

                        #region rate
                        private decimal CalculateMonthlyRate(decimal rate)
                        {
                        return rate / 1200;
                        }
                        #endregion

                        #region monthly Interest
                        private decimal CalculateMonthlyInterest(decimal balance, decimal monthlyRate)
                        {
                        return balance * monthlyRate;
                        }
                        #endregion
                        }

                    </code>
                    </pre>

            </div>
            <div class="col-lg-4">
                <p>the Code is stuctured in in several functions.</p>
                <h5>Loan Calculaor</h5>
                <p>Calculate the amortization of a loan over a period of time</p>
            </div>
        </div>
    </div>
</main>
@section scripts{

    <script src="js/prism.js"></script>
    <script>
        Prism.plugins.NormalizeWhitespace.setDefaults({
            'remove-trailing': true,
            'remove-indent': true,
            'left-trim': true,
            'right-trim': true
        })

    </script>

}